alias physicalSP S0;
physicalSP = ([PTBR + 2 * (SP/512)] * 512) + (SP % 512);
alias syscall S1;
syscall = [physicalSP - 1];
alias filename S2;
filename = [physicalSP - 3];
alias fat S3;
alias basicblock S4;
alias ncodeblocks S6;
alias nmemcblocks S7;
alias count S8;
alias memblock S10;
alias datablock S11;
if(syscall == 9)then
  fat = FAT;
  while(fat < 3071)do
    if([fat] == filename)then
      break;                        //checking for the file
    endif;
    fat = fat + 8;
  endwhile;
  if(fat >= 3071)then
    [physicalSP - 2] = -1;
    ireturn;
  else
    basicblock = [fat + 2];
    load(1,basicblock);                     //loading the new process to scratchpad
    count = 0;
    while(count < 3)do
      if([PTBR + (2 * count) + 1] == "01" || [PTBR + (2 * count) + 1] == "11")then                //checking current page table
        [MEM_LIST +[PTBR + (2 * count)]] = [MEM_LIST +[PTBR + (2 * count)]] -1;
      endif;
      if([PTBR + (2 * count) + 1] == "00" || [PTBR + (2 * count) + 1] == "10" && [PTBR + (2 * count)]>=448)then
        [DISK_LIST +[PTBR + (2 * count)]] = [DISK_LIST +[PTBR + (2 * count)]] -1;
      endif;
      [PTBR + (2 * count)] = [512+count];
      [PTBR + (2 * count) + 1] = "00";                  //setting page tables for new process
      count = count + 1;
    endwhile;

    alias pid S15;
                pid = (PTBR - 1024)/8;
    count = 0;
    alias temp S5;
    temp = 0;
    while(count < 8)do
      temp = [READY_LIST + 15 + (32 * pid) + (2 * count)];
	if(temp!=-1)then
      [FILE_TABLE + 2 * temp + 1] = [FILE_TABLE + 2 * temp + 1]  - 1;
      if([FILE_TABLE + 2 * temp + 1] == 0)then
        [FILE_TABLE + 2 * temp] = -1;
      endif;
	endif;
                                                                    //closing all files opened by the current process
      [READY_LIST + 15 + (32 * pid) + (2 * count)] = -1;
      [READY_LIST + 16 + (32 * pid) + (2 * count)] = -1;
      count = count + 1;
    endwhile;
    SP = 3 * 512;
    temp = [PTBR + (2 * 3)];
    [512 * temp] = 0;
	breakpoint;
    ireturn;
  endif;
endif;
if(syscall==11)then
  alias pid S15;
  pid = (PTBR - 1024)/8;                      //Getpid system call
  [physicalSP - 2] = pid;
  ireturn;
endif;
if(syscall==12)then
  alias pid S15;
  pid = (PTBR - 1024)/8;
  alias ppid S5;
  ppid = [READY_LIST + (pid * 32) + 31];        //Getppid system call
  [physicalSP - 2] = ppid;
  ireturn;
endif;
